stages:
  - Lint
  - Build
  - Test
  - Deploy
  - Cleanup

include:
  - project: 'tethys/kubernetes/gl-k8s-integration'
    ref: 1.3.0-rc2
    file: '/helm-check.yml'
  - project: 'tethys/kubernetes/gl-k8s-integration'
    ref: 1.3.0-rc2
    file: '/kaniko-build.yml'
  - project: 'tethys/kubernetes/gl-k8s-integration'
    ref: 1.3.0-rc2
    file: '/k8s-deploy.yml'
  - project: 'tethys/kubernetes/gl-k8s-integration'
    ref: 1.3.0-rc2
    file: '/test-tethys.yml'

variables:
  CONDA_HOME: '/opt/conda'
  POSTGRES_VERSION: '9.6'
  HYDRAULICSTRUCTURES_TEST_DATABASE: postgresql://postgres:please_dont_use_default_passwords@tethys-postgis:5432/tethys_postgis
  FILE_UPLOAD_MAX_MEMORY_SIZE: 1073741824

### Helm ###
"Check Helm":
  variables:
    HELM_CHART: $CI_PROJECT_DIR/helm/hydraulic_structures
  before_script:
    - helm repo add tethysapp https://aquaveo.github.io/tethysapp_helm_template/
    - helm repo add misc-helm-charts https://aquaveo.github.io/misc-helm-charts/
    - helm repo add condor-docker https://aquaveo.github.io/condor-docker/
    - helm dependency update $HELM_CHART


"Update Helm":
  variables:
    HELM_CHART: $CI_PROJECT_DIR/helm/hydraulic_structures
  before_script:
    - helm repo add tethysapp https://aquaveo.github.io/tethysapp_helm_template/
    - helm repo add misc-helm-charts https://aquaveo.github.io/misc-helm-charts/
    - helm repo add condor-docker https://aquaveo.github.io/condor-docker/
    - helm dependency update $HELM_CHART

### Build ###
"Build Commit":
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

"Build Tag":
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

### Test ###
"Unit Test":
  variables:
    BASENAME: hydraulic_structures

### DEPLOY ###
"Deploy a Preview App":
  after_script:
    - kubectl get secret condor-ssh-pubkey -n hydraulic_structures -o yaml --export | kubectl apply -n $K8S_NS -f -
    - kubectl get secret condor-ssh-key -n hydraulic_structures -o yaml --export | kubectl apply -n $K8S_NS -f -
  variables:
    HELM_CHART: $CI_PROJECT_DIR/helm/hydraulic_structures
    HELM_RELEASE: hydraulic_structures-preview-$CI_COMMIT_SHORT_SHA
    K8S_NS: hydraulic_structures-preview-$CI_COMMIT_SHORT_SHA
    HELM_VALUES: |
      init_staging_data: true
      image:
        repository: $CI_REGISTRY_IMAGE/dev
        tag: $CI_COMMIT_SHORT_SHA
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-body-size: "75m"
          certmanager.k8s.io/cluster-issuer: aqua-ca
        hosts:
          - host: $CI_COMMIT_SHORT_SHA.hydraulic_structures.staging.aquaveo.com
            paths:
               - "/"
        tls:
          - secretName: hydraulic_structures-tls
            hosts:
              - $CI_COMMIT_SHORT_SHA.hydraulic_structures.staging.aquaveo.com
      condor:
        condor_config:
          default_memory_request: "2048"
        resources:
          requests:
            cpu: 1
            memory: "2Gi"
          limits:
            cpu: 4
            memory: "4Gi"

"Deploy to Staging":
  variables:
    HELM_CHART: $CI_PROJECT_DIR/helm/hydraulic_structures
    HELM_RELEASE: hydraulic_structures
    K8S_NS: hydraulic_structures
    HELM_VALUES: |
      init_staging_data: true
      image:
        tag: $CI_COMMIT_TAG
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-body-size: "75m"
          certmanager.k8s.io/cluster-issuer: aqua-ca
        hosts:
          - host: hydraulic_structures.staging.aquaveo.com
            paths:
               - "/"
        tls:
          - secretName: hydraulic_structures-tls
            hosts:
              - hydraulic_structures.staging.aquaveo.com
      tethys:
        settings:
          google_client_id: $GOOGLE_CLIENT_ID
          google_client_pass: $GOOGLE_CLIENT_PASS
      condor:
        condor_config:
          default_memory_request: "2048"
        resources:
          requests:
            cpu: 1
            memory: "2Gi"
          limits:
            cpu: 4
            memory: "4Gi"

"Deploy to Production":
  variables:
    HELM_CHART: $CI_PROJECT_DIR/helm/hydraulic_structures
    HELM_RELEASE: hydraulic_structures
    K8S_NS: hydraulic_structures
    HELM_VALUES: |
      init_staging_data: true
      image:
        tag: $CI_COMMIT_TAG

      tethys:
        super_user:
          username: "admin"
          password: "${PRODUCTION_APP_PASS}"
          email: "nswain@aquaveo.com"
        database:
          tethys_db_username: "tethys_default"
          tethys_db_password: "${PRODUCTION_DB_TETHYS_DEFAULT_PASSWORD}"
          app_db_username: "tethys_super"
          app_db_password: "${PRODUCTION_DB_TETHYS_SUPER_PASSWORD}"
        workspace_size: "10Gi"
        settings:
          google_client_id: $GOOGLE_CLIENT_ID
          google_client_pass: $GOOGLE_CLIENT_PASS

      postgis:
        password: "${PRODUCTION_DB_PASS}"
        extra_config:
          max_connections: "600"
          shared_buffers: "512MB"
          work_mem: "5MB"
          autovacuum: "on"
        resources:
          requests:
            cpu: 2
            memory: "512Mi"
          limits:
            cpu: 4
            memory: "4Gi"

      geoserver:
        env:
          - name: ENABLED_NODES
            value: '4'
          - name: REST_NODES
            value: '1'
          - name: MAX_MEMORY
            value: '1024'
          - name: MIN_MEMORY
            value: '512'
          - name: NUM_CORES
            value: '12'
          - name: MAX_TIMEOUT
            value: '60'
        storage_size: "5Gi"
        resources:
          requests:
            memory: "3Gi"
            cpu: 12
          limits:
            memory: "4Gi"

      condor:
        condor_config:
          default_memory_request: "1024"
        resources:
          requests:
            cpu: 4
            memory: "2Gi"
          limits:
            cpu: 8
            memory: "4Gi"

      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-body-size: "100m"
          certmanager.k8s.io/cluster-issuer: letsencrypt
        hosts:
          - host: hydraulic_structures.aquaveo.com
            paths:
              - "/"
          - host: hydraulic_structures.apps.aquaveo.com
            paths:
              - "/"
        tls:
          - secretName: hydraulic_structures-tls
            hosts:
              - hydraulic_structures.aquaveo.com
              - hydraulic_structures.apps.aquaveo.com

"Remove a Preview App":
  variables:
    HELM_RELEASE: hydraulic_structures-preview-$CI_COMMIT_SHORT_SHA
    K8S_NS: hydraulic_structures-preview-$CI_COMMIT_SHORT_SHA


