# Default values for hydraulic_structures.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


image:
  repository: "docker.aquaveo.com/tethys/hydraulic_structures/tethysapp-hydraulic_structures"
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: gitlab-registry
nameOverride: ""
fullnameOverride: ""

condor:
  replicaCount: 1
  fullnameOverride: "hydraulic_structures-condor"
  keypass: aquaveo
  image:
    tag: latest
    pullPolicy: Always
    repository: docker.aquaveo.com/tethys/hydraulic_structures/hydraulic_structures-condor
  resources: 
    requests:
      cpu: 1
      memory: 128Mi
    limits:
      cpu: 4
      memory: 1Gi
  service:
    type: ClusterIP

geoserver:
  fullnameOverride: "hydraulic_structures-gs"
  image:
    tag: latest
    pullPolicy: Always
  username: "admin"
  password: "geoserver"

postgis:
  fullnameOverride: "hydraulic_structures-db"
  image:
    tag: latest
    pullPolicy: Always
  username: "postgres"
  password: "please_dont_use_default_passwords"

tethys:
  replicaCount: 1
  workspace_size: "5Gi"
  settings:
    client_max_body_size: "1024M"
    file_upload_max_memory_size: "1073741824"
  database:
    tethys_db_name: "tethys_platform"
    tethys_db_username: "tethys_default"
    tethys_db_password: "pass"
    app_db_username: "tethys_super"
    app_db_password: "please_dont_use_default_passwords"
  super_user:
    username: "admin"
    password: "pass"
    email: "none@none.com"
  resources: 
    requests:
      cpu: 1
      memory: 512Mi
    limits:
      cpu: 4
      memory: 1Gi
  service:
    type: ClusterIP
    port: 80

# Note: The first host in the ingress field is used as TETHYS_PUBLIC_HOST and TETHYS_GS_HOST_PUB. 
# This is true EVEN IF the ingress is not enabled!
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}
tolerations: []
affinity: {}
